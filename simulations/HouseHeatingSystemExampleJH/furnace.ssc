component furnace
% Furnace : 1.5
% This block represents a simple furnace in a heating system. The combustion
% is assumed to be a complete oxidation of a simple hydrocarbon fuel.
% The fuel mass flow rate, fuel temperature, humidity ratio, and air 
% temperature are set by physical signal inputs, MF [kg/s], TF [K], HR, and
% TS [K], respectively. Port H is the thermal conserving port associated 
% with the exhaust gas. Physical signal output C_exh [W/K] 
% reports the thermal capacity rate of exhaust gas.

% Copyright 2016-2019 The MathWorks, Inc.
    
nodes
    H = foundation.thermal.thermal; % H:right
end

outputs
    % Thermal capacity rate of exhaust gas
    C_exh    = {2, 'J/s/K'}; % C_exh:right
end

inputs
    % Fuel mass flow rate
    Mdot_fuel   = {0.001, 'kg/s' }; % MF:left
    % Supply fuel temperature
    T_fuel      = {300,   'K'    }; % TF:left
    % Humidity ratio
    Humid_ratio = {0.001, '1'    }; % HR:left
    % Supply air temperature
    T_air       = {300,   'K'    }; % TS:left
end

parameters
    excess_air    = {0.1,  '1'        }; % Percent excess air
    n             = {3.95, '1'        }; % Hydrogen to carbon mole ratio in hydrocarbon fuel
    LHV           = {41e6, 'J/kg'     }; % Hydrocarbon lower heating value
    cp_fuel       = {1880, 'J/(K*kg)' }; % Fuel specific heat at constant pressure
    cp_air        = {1005, 'J/(K*kg)' }; % Dry air specific heat at constant pressure
    cp_vapor      = {1820, 'J/(K*kg)' }; % Water vapor specific heat at constant pressure
    mdot_fuel_min = {1e-5, 'kg/s'     }; % Minimum fuel mass flow rate
end

variables(Access=private)
    % Mass flow rate of supply mixture gas (humid air + fuel)
    mdot_mix    = {1,    'kg/s' };
    % Supply dry air mass flow rate
    mdot_air_su = {1,    'kg/s' };
    % Exhuast gas temperature
    T_gas       = {1000, 'K'    };
    Q           = {0,    'J/s'  };
end

branches
    Q : H.Q -> *;
end

equations
    assert(excess_air>=0)
    assert(n>0)
    assert(LHV>0)
    assert(cp_fuel>0)
    assert(cp_air>0)
    assert(mdot_fuel_min>0)
    let
        % Fuel mass flow rate saturates at minimum fuel mass flow rate
        mdot_fuel_sat = ...
            if ge(Mdot_fuel, mdot_fuel_min), ...
                Mdot_fuel ...
            else ...
                mdot_fuel_min ...
            end
        
        % Fuel thermal energy based on lower heating value (LHV)
        Q_fuel = mdot_fuel_sat * LHV;
                
        % A complete combustion of a hydrocarbon fuel with the general 
        % composition CxHy with simplified air composition 
        % (0.21 O2 + 0.79 N2) : 
        % CxHy + (x+y/4) O2 + (x+y/4)(0.79/0.21)N2 -> x CO2 + y/2 H2O + (x+y/4)(0.79/0.21)N2 
        %
        % Stoichiometric fuel/ dry air ratio is: 
        % FAR_sto = M_fuel/M_air
        % Where
        % M_fuel = mole_weight_H * y + mole_weight_C * x
        % M_air = (x+y/4)*mole_weight_O2 + (x+y/4)(0.79/0.21)*mole_weight_N2
        
        % Stoichiometric fuel/ dry air ratio
        fuel_air_sto = (12+n)/(137.28*(1+n/4));
        
        % Actual fuel/ dry air ratio
        fuel_air_act = fuel_air_sto/(1 + excess_air);
        
        % Specific heat of supply humid air
        cp_su = cp_air + Humid_ratio * cp_vapor;
        
        % Thermal capacity rate of supply humid air
        C_air = mdot_air_su * cp_su;
        
        % Thermal capacity rate of fuel
        C_fuel = mdot_fuel_sat * cp_fuel;
        
        % Supply mixture temperature (humid air + fuel)
        T_mix = (C_air * T_air + C_fuel * T_fuel)/(C_air + C_fuel);
                    
        % Water vapor mass flow rate generated by the combustion
        mdot_water_gen = (n/2)*(18/(12 + n))*mdot_fuel_sat;
        
        % Total water vapor mass flow rate at exhaust
        mdot_water_exh = mdot_air_su * Humid_ratio + mdot_water_gen;
        
        % Exhaust dry air mass flow rate
        mdot_air_exh = mdot_mix - mdot_water_exh;
        
        % Humidity ratio at exhaust
        HR_exh = mdot_water_exh/mdot_air_exh;
        
        % Specific heat of humid air at exhaust
        cp_air_exh = cp_air + HR_exh * cp_vapor;
            
    in
        % Thermal capacity rate of exhaust gas
        C_exh == mdot_air_exh * cp_air_exh;
        
        % Exhaust gas temperature
        T_gas == T_mix + Q_fuel/C_exh;
        T_gas == H.T;
        
        % Supply dry air mass flow rate
        mdot_air_su == mdot_fuel_sat / fuel_air_act;
        
        % Mass flow rate of supply mixture gas (humid air + fuel)
        mdot_mix == mdot_air_su * (1 + Humid_ratio) + mdot_fuel_sat;
    end
end

end


